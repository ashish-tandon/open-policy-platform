version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: openpolicy_postgres
    environment:
      POSTGRES_DB: opencivicdata
      POSTGRES_USER: openpolicy
      POSTGRES_PASSWORD: openpolicy123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openpolicy -d opencivicdata"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: openpolicy_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  api:
    image: ashishtandon9/openpolicyashback:latest
    container_name: openpolicy_api
    environment:
      DATABASE_URL: postgresql://openpolicy:openpolicy123@postgres:5432/opencivicdata
      REDIS_URL: redis://redis:6379/0
      CORS_ORIGINS: "http://192.168.2.152:3000,http://localhost:3000,http://192.168.2.152:8080"
      API_PORT: 8000
    ports:
      - "8000:8000"
    volumes:
      - ./regions_report.json:/app/regions_report.json:ro
      - ./scrapers:/app/scrapers:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  worker:
    image: ashishtandon9/openpolicyashback:latest
    container_name: openpolicy_worker
    environment:
      DATABASE_URL: postgresql://openpolicy:openpolicy123@postgres:5432/opencivicdata
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./regions_report.json:/app/regions_report.json:ro
      - ./scrapers:/app/scrapers:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: celery -A src.scheduler.tasks worker --loglevel=info --concurrency=4

  # Celery Beat Scheduler
  beat:
    image: ashishtandon9/openpolicyashback:latest
    container_name: openpolicy_beat
    environment:
      DATABASE_URL: postgresql://openpolicy:openpolicy123@postgres:5432/opencivicdata
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./regions_report.json:/app/regions_report.json:ro
      - ./scrapers:/app/scrapers:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: celery -A src.scheduler.tasks beat --loglevel=info

  # Flower Monitor
  flower:
    image: ashishtandon9/openpolicyashback:latest
    container_name: openpolicy_flower
    environment:
      DATABASE_URL: postgresql://openpolicy:openpolicy123@postgres:5432/opencivicdata
      REDIS_URL: redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: celery -A src.scheduler.tasks flower --port=5555

  # Nginx for Dashboard
  nginx:
    image: nginx:alpine
    container_name: openpolicy_nginx
    ports:
      - "3000:80"
    volumes:
      - ./dashboard:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: openpolicy_network 