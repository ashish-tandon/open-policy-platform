services:
  # PostgreSQL Database
  postgres:
    image: postgres:17
    container_name: openpolicy_postgres
    environment:
      POSTGRES_DB: opencivicdata
      POSTGRES_USER: openpolicy
      POSTGRES_PASSWORD: ${DB_PASSWORD:-openpolicy123}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    networks:
      - openpolicy_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openpolicy -d opencivicdata"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: openpolicy_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openpolicy_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # OpenPolicy Database API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: openpolicy_api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: opencivicdata
      DB_USER: openpolicy
      DB_PASSWORD: ${DB_PASSWORD:-openpolicy123}
      REDIS_URL: redis://redis:6379/0
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - openpolicy_network
    volumes:
      - ./regions_report.json:/app/regions_report.json:ro
      - ./scrapers:/app/scrapers:ro
    restart: unless-stopped

  # Celery Worker
  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: openpolicy_worker
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: opencivicdata
      DB_USER: openpolicy
      DB_PASSWORD: ${DB_PASSWORD:-openpolicy123}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - openpolicy_network
    volumes:
      - ./regions_report.json:/app/regions_report.json:ro
      - ./scrapers:/app/scrapers:ro
    restart: unless-stopped

  # Celery Beat (Scheduler)
  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile.beat
    container_name: openpolicy_beat
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: opencivicdata
      DB_USER: openpolicy
      DB_PASSWORD: ${DB_PASSWORD:-openpolicy123}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      celery_worker:
        condition: service_started
    networks:
      - openpolicy_network
    volumes:
      - ./regions_report.json:/app/regions_report.json:ro
      - ./scrapers:/app/scrapers:ro
    restart: unless-stopped

  # Celery Flower (Monitoring)
  flower:
    image: mher/flower:2.0
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    depends_on:
      - redis
    networks:
      - openpolicy-network

  # Open Policy Agent - Policy-as-Code Engine
  opa:
    image: openpolicyagent/opa:latest-debug
    ports:
      - "8181:8181"
    command:
      - "run"
      - "--server"
      - "--log-level=debug"
      - "/policies"
    volumes:
      - ./policies:/policies:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - openpolicy-network

  # Policy Validator Service
  policy-validator:
    build:
      context: .
      dockerfile: Dockerfile.policy-validator
    depends_on:
      - opa
      - postgres
      - redis
    environment:
      - OPA_URL=http://opa:8181
      - DATABASE_URL=postgresql://openpolicy:openpolicy123@postgres:5432/opencivicdata
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - ./policies:/policies:ro
      - .:/app
    networks:
      - openpolicy-network

  # Modern Web Dashboard (temporarily disabled due to TypeScript build issues)
  # Uncomment and fix TypeScript errors to enable
  # dashboard:
  #   build:
  #     context: ./dashboard
  #     dockerfile: Dockerfile
  #   container_name: openpolicy_dashboard
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     api:
  #       condition: service_started
  #   networks:
  #     - openpolicy_network
  #   restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  openpolicy_network:
    driver: bridge