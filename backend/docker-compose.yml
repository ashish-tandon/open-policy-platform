version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: openpolicy-db
    environment:
      POSTGRES_DB: openpolicy
      POSTGRES_USER: openpolicy
      POSTGRES_PASSWORD: openpolicy123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U openpolicy -d openpolicy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - openpolicy-network

  # OpenPolicy Platform
  openpolicy:
    build: .
    container_name: openpolicy-platform
    environment:
      - DATABASE_URL=postgresql://openpolicy:openpolicy123@postgres:5432/openpolicy
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=openpolicy
      - DB_USER=openpolicy
      - DB_PASSWORD=openpolicy123
      - ALERT_WEBHOOK=${ALERT_WEBHOOK:-}
      - ALERT_EMAIL=${ALERT_EMAIL:-}
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
    ports:
      - "8000:8000"  # API
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - openpolicy-network
    restart: unless-stopped

  # Redis (for caching and session storage)
  redis:
    image: redis:7-alpine
    container_name: openpolicy-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - openpolicy-network
    restart: unless-stopped

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: openpolicy-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - openpolicy
    networks:
      - openpolicy-network
    restart: unless-stopped

  # Monitoring (Prometheus)
  prometheus:
    image: prom/prometheus:latest
    container_name: openpolicy-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - openpolicy-network
    restart: unless-stopped

  # Grafana (monitoring dashboard)
  grafana:
    image: grafana/grafana:latest
    container_name: openpolicy-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - openpolicy-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  openpolicy-network:
    driver: bridge
